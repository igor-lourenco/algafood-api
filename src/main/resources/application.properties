spring.application.name=algafood-api
server.port=8080

algafood.storage.local.diretorio-fotos=/temp/especialista-spring-rest/backend/algafood-api/src/main/resources

# Comprime as respostas HTTP com Gzip
server.compression.enabled=true

#logging.level.org.springframework=INFO

# ==============================================================
# ============== CONFIGURACOES DO SPRING SECURITY ==============
# ==============================================================

# Usuario e senha usando o Basic Auth do Spring Security, Obs: Foi implementado user e password em memoria
#spring.security.user.name=algafood
#spring.security.user.password=123456

# Essas configuracoes sao usadas para configurar um servidor de recursos OAuth 2.0 no Spring Security que valida tokens opacos(opaque tokens)
#spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://localhost:8081/oauth/check_token
#spring.security.oauth2.resourceserver.opaquetoken.client-id=check-token
#spring.security.oauth2.resourceserver.opaquetoken.client-secret=check123

# Antes de usar o JSON Web Key Set (JWKS)
#spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:keys/algafood-pkey.pem

# Usando o JSON Web Key Set (JWKS)
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/.well-know/jwks.json


# ==================================================================
# ===== CONFIGURACAO DO KEY STORE PARA AS CHAVES ASSIMETRICAS ======
# ==================================================================

#algafood.jwt.keystore.path=classpath:keys/algafood.jks

algafood.jwt.keystore.path=base64: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
algafood.jwt.keystore.password=123456
algafood.jwt.keystore.keypair-alias=algafood


# ==================================================
# ============== CONFIGURACOES DO JPA ==============
# ==================================================
spring.datasource.url=jdbc:mysql://${DB_HOST:192.168.0.54:3306}/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
spring.datasource.username=igor
spring.datasource.password=L@ur&nco@Mysql135

# indica que deve gerar automaticamente o Data Definition Language (DDL) para o banco de dados.
#spring.jpa.generate-ddl=true

#  Indica que o Hibernate deve criar o esquema do banco de dados a partir do zero toda vez que a aplicacao e inicializada.
# spring.jpa.hibernate.ddl-auto=create

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

# ================================================
# ============== GERACAO DE SCRIPTS ==============
# ================================================

# Cria um script de geracao mas nao executa
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create

# Salva o arquivo nesse caminho
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

spring.jpa.properties.hibernate.hbm2ddl.charset_name=UTF-8

# ====================================================================================================
# ========= CONFIGURACOES DO FLYWAY PARA VERSIONAMENTO DO BANCO DE DADOS =============================
# ====================================================================================================

# Especifica os caminhos onde deve procurar o arquivos de insercao de dados de teste
spring.flyway.locations=classpath:db/migration,classpath:db/testdata


# ====================================================================================================
# ========= CONFIGURACOES DO HIKARI E POOL DE CONEXOES DO BANCO DE DADOS =============================
# ====================================================================================================

# Maximo de conexoes que podem ser abertas com o banco de dados, o padrao e 10
spring.datasource.hikari.maximum-pool-size=10

# Minimo de conexoes que podem ser abertas com o banco de dados
spring.datasource.hikari.minimum-idle=10

# O tempo maximo que as conexoes a mais que foram abertas, podem estar conectadas com o banco de dados
#spring.datasource.hikari.idle-timeout=10000

# ========================================================================================
# ========= CONFIGURACOES DO JACKSON PARA TRABALHAR COM JSON =============================
# ========================================================================================

# Habilita para retornar erro quando passar campo que nao existe na entidade ou no objeto DTO
spring.jackson.deserialization.fail-on-unknown-properties=true

# Habilita para retornar erro quando passar campo que esta mapeado para ser ignorada na entidade ou no objeto DTO
spring.jackson.deserialization.fail-on-ignored-properties=true


# ========================================================================================

# Faz com que o Spring MVC lance uma excecao (NoHandlerFoundException) quando uma requisicao nao corresponde a nenhum handler (ou seja, nao encontra um endpoint correspondente).
spring.mvc.throw-exception-if-no-handler-found=true

# Esta configuracao desabilita o mapeamento automatico de recursos estaticos no Spring Boot.
# Eh util em cenarios onde voca deseja ter controle total sobre os mapeamentos de recursos estaticos ou quando nao quer que o Spring Boot interfira na gestao desses recursos.
spring.resources.add-mappings=false

# ========================================================================================
# ========= CONFIGURACOES DO UPLOAD DE ARQUIVO ===========================================
# ========================================================================================
# Foi comentado porque essa configuracao eh global para todas as APIs do projeto e foi implementado a validacao usando annotation customizada @FileSizeValid para tratar o tamanho individualmente

# Define o tamanho maximo permitido para um unico arquivo enviado em uma requisicao multipart.
#spring.servlet.multipart.max-file-size=10KB

# Define o tamanho maximo permitido para a requisicao completa, incluindo todos os arquivos e dados do formulario.
#spring.servlet..multipart.max-request-size=10MB


# ========================================================================================
# ========= CONFIGURACOES DO SENDGRID PARA ENVIO DE E-MAIL ===============================
# ========================================================================================

spring.mail.host=smtp.sendgrid.net
spring.mail.port=587
spring.mail.username=apikey
spring.mail.password=

algafood.email.remetente=

# Configura o locale (localidade) para o motor de templates FreeMarker no contexto da aplicacao
spring.freemarker.settings.locale=pt_BR

# Confiuracao para implementar o service de e-mail de acordo com o valor especificado
algafood.email.impl=fake
algafood.email.sandbox.destinatario=digite aqui o endereco email que ira receber o email enviado, usando a implementacao sandbox...