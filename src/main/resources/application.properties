spring.application.name=algafood-api

algafood.storage.local.diretorio-fotos=/temp/especialista-spring-rest/backend/algafood-api/src/main/resources


# ==================================================
# ============== CONFIGURACOES DO JPA ==============
# ==================================================
spring.datasource.url=jdbc:mysql://192.168.0.54:3306/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
spring.datasource.username=igor
spring.datasource.password=L@ur&nco@Mysql135

# indica que deve gerar automaticamente o Data Definition Language (DDL) para o banco de dados.
#spring.jpa.generate-ddl=true

#  Indica que o Hibernate deve criar o esquema do banco de dados a partir do zero toda vez que a aplicacao e inicializada.
# spring.jpa.hibernate.ddl-auto=create

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

# ================================================
# ============== GERACAO DE SCRIPTS ==============
# ================================================

# Cria um script de geracao mas nao executa
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create

# Salva o arquivo nesse caminho
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

spring.jpa.properties.hibernate.hbm2ddl.charset_name=UTF-8

# ====================================================================================================
# ========= CONFIGURACOES DO FLYWAY PARA VERSIONAMENTO DO BANCO DE DADOS =============================
# ====================================================================================================

# Especifica os caminhos onde deve procurar o arquivos de insercao de dados de teste
#spring.flyway.locations=classpath:db/migration,classpath:db/testdata


# ====================================================================================================
# ========= CONFIGURACOES DO HIKARI E POOL DE CONEXOES DO BANCO DE DADOS =============================
# ====================================================================================================

# Maximo de conexoes que podem ser abertas com o banco de dados, o padrao e 10
spring.datasource.hikari.maximum-pool-size=10

# Minimo de conexoes que podem ser abertas com o banco de dados
spring.datasource.hikari.minimum-idle=10

# O tempo maximo que as conexoes a mais que foram abertas, podem estar conectadas com o banco de dados
#spring.datasource.hikari.idle-timeout=10000

# ========================================================================================
# ========= CONFIGURACOES DO JACKSON PARA TRABALHAR COM JSON =============================
# ========================================================================================

# Habilita para retornar erro quando passar campo que nao existe na entidade ou no objeto DTO
spring.jackson.deserialization.fail-on-unknown-properties=true

# Habilita para retornar erro quando passar campo que esta mapeado para ser ignorada na entidade ou no objeto DTO
spring.jackson.deserialization.fail-on-ignored-properties=true


# ========================================================================================

# Faz com que o Spring MVC lance uma excecao (NoHandlerFoundException) quando uma requisicao nao corresponde a nenhum handler (ou seja, nao encontra um endpoint correspondente).
spring.mvc.throw-exception-if-no-handler-found=true

# Esta configuracao desabilita o mapeamento automatico de recursos estaticos no Spring Boot.
# Eh util em cenarios onde voca deseja ter controle total sobre os mapeamentos de recursos estaticos ou quando nao quer que o Spring Boot interfira na gestao desses recursos.
spring.resources.add-mappings=false

# ========================================================================================
# ========= CONFIGURACOES DO UPLOAD DE ARQUIVO ===========================================
# ========================================================================================
# Foi comentado porque essa configuracao eh global para todas as APIs do projeto e foi implementado a validacao usando annotation customizada @FileSizeValid para tratar o tamanho individualmente

# Define o tamanho maximo permitido para um unico arquivo enviado em uma requisicao multipart.
#spring.servlet.multipart.max-file-size=10KB

# Define o tamanho maximo permitido para a requisicao completa, incluindo todos os arquivos e dados do formulario.
#spring.servlet..multipart.max-request-size=10MB


# ========================================================================================
# ========= CONFIGURACOES DO SENDGRID PARA ENVIO DE E-MAIL ===============================
# ========================================================================================

spring.mail.host=smtp.sendgrid.net
spring.mail.port=587
spring.mail.username=apykey
spring.mail.password=